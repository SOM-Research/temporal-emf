<%-
Copyright (c) 2020 SOM Research Lab.
All rights reserved. This program and the accompanying materials
are made available under the terms of the Eclipse Public License v1.0
which accompanies this distribution, and is available at
http://www.eclipse.org/legal/epl-v10.html

Contributors:
    Abel Gómez - initial API and implementation
-%>
<%if (isInterface) {%>
	/**
	 * Unsets the value of the '{@link <%=genClass.getRawQualifiedInterfaceName()%>#<%=genFeature.getGetAccessor()%> <em><%=genFeature.getFormattedName()%></em>}' <%=genFeature.getFeatureKind()%>.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #isSet<%=genFeature.getAccessorName()%>()
	 * @generated
	 */
<%} else {%>
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
    <%if (genFeature.hasAPITags()) {%>
	 * <%=genFeature.getAPITags(genModel.getIndentation(stringBuffer))%>
    <%}%>
	 * @generated
	 */
<%}%>
        <%if (isJDK50 && genFeature.hasAPIDeprecatedTag()) {%>
	@Deprecated
        <%}%>
<%if (!isImplementation) {%>
	void unset<%=genFeature.getAccessorName()%>();

<%} else {%>
  <%if (useInterfaceOverrideAnnotation  && !genClass.isMapEntry() && !genFeature.isSuppressedIsSetVisibility()) {%>
	@Override
  <%}%>
	public void unset<%=genFeature.getAccessorName()%>()
	{
    <%if (genModel.isReflectiveDelegation()) {%>
		eUnset(<%=genFeature.getQualifiedFeatureAccessor()%>);
    <%} else {%>
		throw new UnsupportedOperationException();
    <%}%>
	}

<%}%>